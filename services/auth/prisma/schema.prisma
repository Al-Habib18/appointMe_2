
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
  }
  
  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }
  
  enum Role {
    PATIENT
    DOCTOR
    ADMIN
  }
  
  enum AccountStatus {
    PENDING
    ACTIVE
    INACTIVE
    SUSPENDED
  }
  model User{
    id                String             @id @default(cuid())
    name              String
    email             String             @unique
    password          String
    role              Role               @default(PATIENT)
    verified          Boolean            @default(false)
    status            AccountStatus      @default(PENDING)
    createdAt         DateTime           @default(now())
    updatedAt         DateTime           @updatedAt
    verificationCodes VerificationCode[]
  }


  enum VerificationStatus {
  PENDING
  USED
  EXPIRED
}

enum VerificationCodeType {
  ACCOUNT_ACTIVATION
  PASSWORD_RESET
  EMAIL_CHANGE
  PHONE_CHANGE
  TWO_FACTOR_AUTH
  TWO_FACTOR_AUTH_DISABLE
}

model VerificationCode {
  id         String               @id @default(cuid())
  userId     String
  user       User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  status     VerificationStatus   @default(PENDING)
  code       String
  type       VerificationCodeType @default(ACCOUNT_ACTIVATION)
  issuedAt   DateTime             @default(now())
  expiresAt  DateTime
  verifiedAt DateTime?
}

model Refresh {
  id     String @id @default(cuid())
  userId String
  email  String
  token  String
  created_at DateTime @default(now())
}